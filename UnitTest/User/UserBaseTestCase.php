<?php
namespace UnitTest\User;


use App\HttpController\Api\User\Auth;
use App\HttpController\Api\User\UserBase;
use App\Model\User\UserModel;
use Curl\Curl;

use UnitTest\BaseTest;
use UnitTest\Utility\DataCreate;


class UserBaseTestCase extends BaseTest
{
    protected $apiBase = '/Api/User';

    /**
     * @var $userBean UserModel
     */
    protected $userBean;
    /**
     * @var $dataCreate DataCreate
     */
    protected $dataCreate;
    protected $userSession;
    protected $token;

    /**
     * @var Curl
     */
    protected $curl;
    protected $modelName = '';
    protected $userData = [
        'username' => 'Lh',
        'account' => 'Lh',
        'password' => '123456'
    ];

    function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->curl = new Curl();
        $this->register();
        $this->dataCreate = new DataCreate();
        $this->login();
        $this->curlInit();
        $this->getUserInfo();
    }

    function register()
    {
        $userData = $this->userData;
        //判断会员是否存在
        $model = new UserModel();
        $userInfo = $model->get(['account' => $userData['account']]);
        if($userInfo){
            $userData['password'] = $model::hashPassword($userData['password']);
            $userInfo->update($userData);
        }else{
            $userData['password'] = $model::hashPassword($userData['password']);
            $model = new UserModel($userData);
            $model->save();
            $userInfo = $model;
        }
        return $userInfo;
    }

    public function curlInit(){
        $this->curl->setCookies([
            UserBase::USER_TOKEN_NAME => $this->token
        ]);
    }

    public function tearDown(): void
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
        $this->dataCreate->destroy();
    }

    public function getUserInfo()
    {
        $response = $this->request('getDetail',[],'User/UserInfo');
        $this->userBean = new UserModel((array)$response->result);
    }

    public function login()
    {
        $curl = $this->curl;
        $time = time();
        $curl->setCookies([
            'verifyCodeHash' => md5('1234' . $time),
            'verifyCodeTime' => $time,
        ]);
        $userData = $this->userData;
        $userData['password'] = UserModel::hashPassword($userData['password']);
        $response = $this->request('loginByPassword',$userData,'Auth');
        $this->userBean = new UserModel((array)$response->result);
        $this->token = $curl->getResponseCookie(Auth::USER_TOKEN_NAME);
    }

    public function logout()
    {
        $this->request('logout',[],'Auth');
    }
}